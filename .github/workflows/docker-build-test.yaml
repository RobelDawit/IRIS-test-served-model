name: Push the Docker image to AWS ECR Repo
on:
  push:
    branches:
      - main
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: iris-test-served-model
  ECR_REGISTRY: 381492096892.dkr.ecr.us-east-1.amazonaws.com
permissions:
  contents: read
jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
      
      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build the Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-commit-hash.outputs.commit-hash }} .
          
          # Tag the image with 'latest'
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-commit-hash.outputs.commit-hash }} $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          # Push both tags
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-commit-hash.outputs.commit-hash }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
